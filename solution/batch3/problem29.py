""" Problem 29: Distinct Powers

https://projecteuler.net/problem=29

Goal: Count the distinct terms in a sequence generated by
a^b when 2 <= a <= N and 2 <= b <= N.

Constraints: 2 <= N <= 1e5

e.g.: N = 4
      terms = {4, 8, 16}, {9, 27, 81}, {16, 64, 256}
      count = 8
"""
from math import log, ceil


def distinct_powers_brute(n):
    return len(set([pow(a, b) for b in range(2, n+1) for a in range(2, n+1)]))


def is_power(n):
    for base in range(2, n):
        exp = log(n) / log(base)
        if int(exp) == exp:
            return True
    return False


def distinct_power(n):
    terms = n - 1
    terms_reduced = ceil(n / 2)
    count = 0
    for base in range(2, n + 1):
        count += terms_reduced if is_power(base) else terms
    return count


